# Generated by Django 4.2 on 2023-09-11 17:37

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('entries_limit', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Entries limit per user')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['contest__title', 'style__name'],
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, help_text='will be used in contest URL, can be derrived automatically from titile', unique=True)),
                ('show', models.BooleanField(default=True, verbose_name='Allow to use this category in competitions')),
                ('extra_info_is_required', models.BooleanField(default=False, verbose_name='Require extra information for entries?')),
                ('extra_info_hint', models.CharField(blank=True, help_text='This will instruct the participants what information they need to provide for an entry.</br>Fill only if you require extra information for entries', max_length=255, verbose_name='Required information hint')),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_styles', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_styles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'style',
                'verbose_name_plural': 'styles',
            },
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid1, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('extra_info', models.CharField(blank=True, max_length=25, verbose_name='Additional information')),
                ('is_paid', models.BooleanField(default=False)),
                ('is_received', models.BooleanField(default=False)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('brewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='contest.category')),
            ],
            options={
                'verbose_name': 'entry',
                'verbose_name_plural': 'entries',
                'ordering': ['category__contest__title', 'category__style__name', 'brewer', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(blank=True, help_text='will be used in contest URL, can be derrived automatically from titile', unique=True)),
                ('description', models.TextField()),
                ('registration_date_from', models.DateField(blank=True, null=True, verbose_name='Entry registration from')),
                ('registration_date_to', models.DateField(blank=True, null=True, verbose_name='to')),
                ('delivery_date_from', models.DateField(blank=True, null=True, verbose_name='Delivery from')),
                ('delivery_date_to', models.DateField(blank=True, null=True, verbose_name='to')),
                ('judging_date_from', models.DateField(blank=True, null=True, verbose_name='Judging sessions from')),
                ('judging_date_to', models.DateField(blank=True, null=True, verbose_name='to')),
                ('competition_is_published', models.BooleanField(default=False, help_text='Ignores auto-publish date', verbose_name='Competition page is published')),
                ('competition_autopublish_datetime', models.DateTimeField(blank=True, help_text='Fill only if you want the competition page to be published automatically at that time', null=True, verbose_name='When to publish competition page automatically')),
                ('result_is_published', models.BooleanField(default=False, help_text='Ignores auto-publish date', verbose_name='Competition results are published')),
                ('result_autopublish_datetime', models.DateTimeField(blank=True, help_text='Fill only if you want the competition <b>results</b> to be published automatically at that time', null=True, verbose_name='When to publish results automatically')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_contests', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_contests', to=settings.AUTH_USER_MODEL)),
                ('styles', models.ManyToManyField(through='contest.Category', to='contest.style')),
            ],
            options={
                'verbose_name': 'contest',
                'verbose_name_plural': 'contests',
                'ordering': ('-judging_date_from', '-delivery_date_to'),
            },
        ),
        migrations.AddField(
            model_name='category',
            name='contest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='contest.contest'),
        ),
        migrations.AddField(
            model_name='category',
            name='created_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_categories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='modified_by',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='modified_categories', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='category',
            name='style',
            field=models.ForeignKey(limit_choices_to={'show': True}, on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='contest.style'),
        ),
        migrations.AddConstraint(
            model_name='category',
            constraint=models.UniqueConstraint(fields=('style', 'contest'), name='unique_contest_style'),
        ),
    ]
